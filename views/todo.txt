Moves table:
- Remove extra bit on the right?
- No moves yet is not in a table, table created after first move.
- Make moves clickable (load PGN)
   - Highlight correct moves too
- Arrow keys to go through moves too

Openings:
- Make bot actually play Openings
- Create custom openings
- Add default openings to user
https://chat.openai.com/share/aec89c59-dd9c-4038-bd0e-f5f6c8347623
-- Inserting an opening
INSERT INTO Openings (OpeningID, Name) VALUES (1, 'Sicilian Defense');

-- Inserting moves for the Sicilian Defense
INSERT INTO Moves (MoveID, OpeningID, Move, Description, ParentMoveID, Rank) VALUES (1, 1, 'e4', 'Standard opening move', NULL, 1);
INSERT INTO Moves (MoveID, OpeningID, Move, Description, ParentMoveID, Rank) VALUES (2, 1, 'c5', 'Sicilian Defense', 1, 1);
INSERT INTO Moves (MoveID, OpeningID, Move, Description, ParentMoveID, Rank) VALUES (3, 1, 'Nf3', 'Developing the knight', 2, 1);
-- Add more moves as needed

-- Inserting moves for Black's responses
INSERT INTO Moves (MoveID, OpeningID, Move, Description, ParentMoveID, Rank) VALUES (4, 1, 'd4', 'Open Sicilian', 2, 1);  -- Black's first option
-- Add more moves for the first option

INSERT INTO Moves (MoveID, OpeningID, Move, Description, ParentMoveID, Rank) VALUES (5, 1, 'Nc6', 'Closed Sicilian', 2, 1);  -- Black's second option
-- Add more moves for the second option

-- Inserting white's options in response to Black's first option
INSERT INTO Moves (MoveID, OpeningID, Move, Description, ParentMoveID, Rank) VALUES (6, 1, 'Nc3', 'Alternative to d4', 4, 1);
-- Add more moves for the first white option

-- Inserting white's options in response to Black's second option
INSERT INTO Moves (MoveID, OpeningID, Move, Description, ParentMoveID, Rank) VALUES (7, 1, 'g3', 'Alternative to Nc6', 5, 1);

CREATE TABLE Moves (
    MoveID INT PRIMARY KEY,
    OpeningID INT,
    Move VARCHAR(10) NOT NULL,
    Description TEXT,
    ParentMoveID INT,
    Rank INT,
    FOREIGN KEY (OpeningID) REFERENCES Openings(OpeningID),
    FOREIGN KEY (ParentMoveID) REFERENCES Moves(MoveID)
);

CREATE TABLE Openings (
    OpeningID INT PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Shared BOOLEAN NOT NULL,
    UserID INT, -- Foreign Key referencing Users
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);